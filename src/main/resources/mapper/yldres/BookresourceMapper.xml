<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--<mapper namespace="org.spring.springboot.dao.res">-->
<mapper namespace="org.spring.springboot.dao.yldres.BookresourceDao">
    <resultMap id="BaseResultMap" type="org.spring.springboot.domain.yldres.Bookresource">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="bookId" jdbcType="BIGINT" property="bookId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="release" jdbcType="TINYINT" property="release"/>
        <result column="video" jdbcType="TINYINT" property="video"/>
        <result column="version" jdbcType="VARCHAR" property="version"/>
        <result column="bookType" jdbcType="INTEGER" property="bookType"/>
        <result column="serverAddress" jdbcType="VARCHAR" property="serverAddress"/>
        <result column="videoPath" jdbcType="VARCHAR" property="videoPath"/>
    </resultMap>

    <sql id="Base_Column_List">
		id,bookId,`name`,`release`,video,`version`,`bookType`, `serverAddress`, `videoPath`
	</sql>

    <select id="fetchBookresourceInfos" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from BookResource
        order by `bookId`
    </select>

    <select id="fetchBookresourceInfosByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from BookResource b
        where b.name like concat('%',#{name,jdbcType=VARCHAR},'%')
    </select>

    <!--<select id="fetchBookresourceInfosByBookId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from BookResource b
        where b.bookId like concat('%',#{bookId,jdbcType=VARCHAR},'%')
    </select>-->

    <select id="fetchBookresourceInfosByBookId" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from BookResource b
        where b.bookId = #{bookId}
    </select>

    <select id="searchBooklist" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from BookResource b
        where b.bookId like concat('%',#{keyword,jdbcType=VARCHAR},'%')
        or b.name like concat('%',#{keyword,jdbcType=VARCHAR},'%')
    </select>
    <select id="batchQueryBookResourceInfosByIds"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from BookResource
        <trim prefix="where">
            bookId in
            <foreach collection="bookIdx" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </trim>

    </select>

    <insert id="saveBookInfo" parameterType="org.spring.springboot.domain.yldres.Bookresource" useGeneratedKeys="true"
            keyProperty="id">
		insert into
		BookResource(id,bookId,`name`,`release`,video,`version`,`bookType`,`serverAddress`,`videoPath`)
		values
		(#{id},#{bookId},#{name},#{release},#{video},#{version},#{bookType},#{serverAddress},#{videoPath})
	</insert>

    <!--备用方案：为bookType添加默认值
    <insert id="saveBookInfo" parameterType="org.spring.springboot.domain.yldres.Bookresource" useGeneratedKeys="true"
            keyProperty="id">
        insert into
        BookResource(id,bookId,`name`,`release`,video,`version`,`bookType`,`serverAddress`)
        values
        (
        #{id},
        #{bookId},
        #{name},
        #{release},
        #{video},
        #{version},
        <choose>
            <when test="bookType!=null">
                #{bookType}
            </when>
            <otherwise>
                0 &lt;!&ndash; 这里是默认值，你可以根据需要进行修改 &ndash;&gt;
            </otherwise>
        </choose>,
        #{serverAddress}
        )
    </insert>-->

    <update id="updateBookInfo" parameterType="org.spring.springboot.domain.yldres.Bookresource">
        update
        BookResource
        <trim prefix="set" suffixOverrides=",">
            <if test="bookId!=null">
                bookId = #{bookId},
            </if>
            <if test="name!=null">
                `name` = #{name},
            </if>
            <if test="release!=null">
                `release` = #{release,jdbcType=INTEGER},
            </if>
            <if test="video!=null">
                `video` = #{video,jdbcType=INTEGER},
            </if>
            <if test="version!=null">
                `version` = #{version},
            </if>
            <if test="bookType!=null">
                `bookType` = #{bookType},
            </if>
            <if test="serverAddress!=null">
                `serverAddress` = #{serverAddress},
            </if>
            <if test="videoPath!=null">
                `videoPath` = #{videoPath},
            </if>
        </trim>

        where
        id = #{id}
    </update>

    <delete id="deleteBookInfo" parameterType="org.spring.springboot.domain.yldres.Bookresource">
		delete from
		    BookResource
		where
		id = #{id}
	</delete>
</mapper>
