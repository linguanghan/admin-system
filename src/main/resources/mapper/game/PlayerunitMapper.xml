<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.springboot.dao.game.PlayerunitDao">
  <resultMap id="BaseResultMap" type="org.spring.springboot.domain.game.playerunit.Playerunit">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="createTime" jdbcType="INTEGER" property="createtime" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="packageIdx" jdbcType="INTEGER" property="packageidx" />
    <result column="bookIdx" jdbcType="INTEGER" property="bookidx" />
    <result column="bookType" jdbcType="INTEGER" property="booktype" />
    <result column="unit1" jdbcType="INTEGER" property="unit1" />
    <result column="unit2" jdbcType="INTEGER" property="unit2" />
    <result column="unit3" jdbcType="INTEGER" property="unit3" />
    <result column="unit4" jdbcType="INTEGER" property="unit4" />
    <result column="unit5" jdbcType="INTEGER" property="unit5" />
    <result column="unit6" jdbcType="INTEGER" property="unit6" />
    <result column="unit7" jdbcType="INTEGER" property="unit7" />
    <result column="unit8" jdbcType="INTEGER" property="unit8" />
    <result column="unit9" jdbcType="INTEGER" property="unit9" />
    <result column="unit10" jdbcType="INTEGER" property="unit10" />
    <result column="unit11" jdbcType="INTEGER" property="unit11" />
    <result column="unit12" jdbcType="INTEGER" property="unit12" />
    <result column="unit13" jdbcType="INTEGER" property="unit13" />
    <result column="unit14" jdbcType="INTEGER" property="unit14" />
    <result column="unit15" jdbcType="INTEGER" property="unit15" />
    <result column="unit16" jdbcType="INTEGER" property="unit16" />
    <result column="unit17" jdbcType="INTEGER" property="unit17" />
    <result column="unit18" jdbcType="INTEGER" property="unit18" />
    <result column="unit19" jdbcType="INTEGER" property="unit19" />
    <result column="unit20" jdbcType="INTEGER" property="unit20" />
    <result column="period" jdbcType="INTEGER" property="period" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pid, createTime, channel, packageIdx, bookIdx, bookType, unit1, unit2, unit3,
    unit4, unit5, unit6, unit7, unit8, unit9, unit10, unit11, unit12, unit13, unit14, 
    unit15, unit16, unit17, unit18, unit19, unit20, `period`
  </sql>
  <select id="selectByExample" parameterType="generator.PlayerunitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from playerUnit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from playerUnit
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from playerUnit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="generator.PlayerunitExample">
    delete from playerUnit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.spring.springboot.domain.game.playerunit.Playerunit" useGeneratedKeys="true">
    insert into playerUnit (pid, createTime, channel, 
      packageIdx, bookIdx, bookType, 
      unit1, unit2, unit3, 
      unit4, unit5, unit6, 
      unit7, unit8, unit9, 
      unit10, unit11, unit12, 
      unit13, unit14, unit15, 
      unit16, unit17, unit18, 
      unit19, unit20, period
      )
    values (#{pid,jdbcType=BIGINT}, #{createtime,jdbcType=INTEGER}, #{channel,jdbcType=INTEGER}, 
      #{packageidx,jdbcType=INTEGER}, #{bookidx,jdbcType=INTEGER}, #{booktype,jdbcType=INTEGER}, 
      #{unit1,jdbcType=INTEGER}, #{unit2,jdbcType=INTEGER}, #{unit3,jdbcType=INTEGER}, 
      #{unit4,jdbcType=INTEGER}, #{unit5,jdbcType=INTEGER}, #{unit6,jdbcType=INTEGER}, 
      #{unit7,jdbcType=INTEGER}, #{unit8,jdbcType=INTEGER}, #{unit9,jdbcType=INTEGER}, 
      #{unit10,jdbcType=INTEGER}, #{unit11,jdbcType=INTEGER}, #{unit12,jdbcType=INTEGER}, 
      #{unit13,jdbcType=INTEGER}, #{unit14,jdbcType=INTEGER}, #{unit15,jdbcType=INTEGER}, 
      #{unit16,jdbcType=INTEGER}, #{unit17,jdbcType=INTEGER}, #{unit18,jdbcType=INTEGER}, 
      #{unit19,jdbcType=INTEGER}, #{unit20,jdbcType=INTEGER}, #{period,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.spring.springboot.domain.game.playerunit.Playerunit" useGeneratedKeys="true">
    insert into playerUnit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="packageidx != null">
        packageIdx,
      </if>
      <if test="bookidx != null">
        bookIdx,
      </if>
      <if test="booktype != null">
        bookType,
      </if>
      <if test="unit1 != null">
        unit1,
      </if>
      <if test="unit2 != null">
        unit2,
      </if>
      <if test="unit3 != null">
        unit3,
      </if>
      <if test="unit4 != null">
        unit4,
      </if>
      <if test="unit5 != null">
        unit5,
      </if>
      <if test="unit6 != null">
        unit6,
      </if>
      <if test="unit7 != null">
        unit7,
      </if>
      <if test="unit8 != null">
        unit8,
      </if>
      <if test="unit9 != null">
        unit9,
      </if>
      <if test="unit10 != null">
        unit10,
      </if>
      <if test="unit11 != null">
        unit11,
      </if>
      <if test="unit12 != null">
        unit12,
      </if>
      <if test="unit13 != null">
        unit13,
      </if>
      <if test="unit14 != null">
        unit14,
      </if>
      <if test="unit15 != null">
        unit15,
      </if>
      <if test="unit16 != null">
        unit16,
      </if>
      <if test="unit17 != null">
        unit17,
      </if>
      <if test="unit18 != null">
        unit18,
      </if>
      <if test="unit19 != null">
        unit19,
      </if>
      <if test="unit20 != null">
        unit20,
      </if>
      <if test="period != null">
        period,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="packageidx != null">
        #{packageidx,jdbcType=INTEGER},
      </if>
      <if test="bookidx != null">
        #{bookidx,jdbcType=INTEGER},
      </if>
      <if test="booktype != null">
        #{booktype,jdbcType=INTEGER},
      </if>
      <if test="unit1 != null">
        #{unit1,jdbcType=INTEGER},
      </if>
      <if test="unit2 != null">
        #{unit2,jdbcType=INTEGER},
      </if>
      <if test="unit3 != null">
        #{unit3,jdbcType=INTEGER},
      </if>
      <if test="unit4 != null">
        #{unit4,jdbcType=INTEGER},
      </if>
      <if test="unit5 != null">
        #{unit5,jdbcType=INTEGER},
      </if>
      <if test="unit6 != null">
        #{unit6,jdbcType=INTEGER},
      </if>
      <if test="unit7 != null">
        #{unit7,jdbcType=INTEGER},
      </if>
      <if test="unit8 != null">
        #{unit8,jdbcType=INTEGER},
      </if>
      <if test="unit9 != null">
        #{unit9,jdbcType=INTEGER},
      </if>
      <if test="unit10 != null">
        #{unit10,jdbcType=INTEGER},
      </if>
      <if test="unit11 != null">
        #{unit11,jdbcType=INTEGER},
      </if>
      <if test="unit12 != null">
        #{unit12,jdbcType=INTEGER},
      </if>
      <if test="unit13 != null">
        #{unit13,jdbcType=INTEGER},
      </if>
      <if test="unit14 != null">
        #{unit14,jdbcType=INTEGER},
      </if>
      <if test="unit15 != null">
        #{unit15,jdbcType=INTEGER},
      </if>
      <if test="unit16 != null">
        #{unit16,jdbcType=INTEGER},
      </if>
      <if test="unit17 != null">
        #{unit17,jdbcType=INTEGER},
      </if>
      <if test="unit18 != null">
        #{unit18,jdbcType=INTEGER},
      </if>
      <if test="unit19 != null">
        #{unit19,jdbcType=INTEGER},
      </if>
      <if test="unit20 != null">
        #{unit20,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.PlayerunitExample" resultType="java.lang.Long">
    select count(*) from playerUnit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update playerUnit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=INTEGER},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=INTEGER},
      </if>
      <if test="record.packageidx != null">
        packageIdx = #{record.packageidx,jdbcType=INTEGER},
      </if>
      <if test="record.bookidx != null">
        bookIdx = #{record.bookidx,jdbcType=INTEGER},
      </if>
      <if test="record.booktype != null">
        bookType = #{record.booktype,jdbcType=INTEGER},
      </if>
      <if test="record.unit1 != null">
        unit1 = #{record.unit1,jdbcType=INTEGER},
      </if>
      <if test="record.unit2 != null">
        unit2 = #{record.unit2,jdbcType=INTEGER},
      </if>
      <if test="record.unit3 != null">
        unit3 = #{record.unit3,jdbcType=INTEGER},
      </if>
      <if test="record.unit4 != null">
        unit4 = #{record.unit4,jdbcType=INTEGER},
      </if>
      <if test="record.unit5 != null">
        unit5 = #{record.unit5,jdbcType=INTEGER},
      </if>
      <if test="record.unit6 != null">
        unit6 = #{record.unit6,jdbcType=INTEGER},
      </if>
      <if test="record.unit7 != null">
        unit7 = #{record.unit7,jdbcType=INTEGER},
      </if>
      <if test="record.unit8 != null">
        unit8 = #{record.unit8,jdbcType=INTEGER},
      </if>
      <if test="record.unit9 != null">
        unit9 = #{record.unit9,jdbcType=INTEGER},
      </if>
      <if test="record.unit10 != null">
        unit10 = #{record.unit10,jdbcType=INTEGER},
      </if>
      <if test="record.unit11 != null">
        unit11 = #{record.unit11,jdbcType=INTEGER},
      </if>
      <if test="record.unit12 != null">
        unit12 = #{record.unit12,jdbcType=INTEGER},
      </if>
      <if test="record.unit13 != null">
        unit13 = #{record.unit13,jdbcType=INTEGER},
      </if>
      <if test="record.unit14 != null">
        unit14 = #{record.unit14,jdbcType=INTEGER},
      </if>
      <if test="record.unit15 != null">
        unit15 = #{record.unit15,jdbcType=INTEGER},
      </if>
      <if test="record.unit16 != null">
        unit16 = #{record.unit16,jdbcType=INTEGER},
      </if>
      <if test="record.unit17 != null">
        unit17 = #{record.unit17,jdbcType=INTEGER},
      </if>
      <if test="record.unit18 != null">
        unit18 = #{record.unit18,jdbcType=INTEGER},
      </if>
      <if test="record.unit19 != null">
        unit19 = #{record.unit19,jdbcType=INTEGER},
      </if>
      <if test="record.unit20 != null">
        unit20 = #{record.unit20,jdbcType=INTEGER},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update playerUnit
    set id = #{record.id,jdbcType=BIGINT},
      pid = #{record.pid,jdbcType=BIGINT},
      createTime = #{record.createtime,jdbcType=INTEGER},
      channel = #{record.channel,jdbcType=INTEGER},
      packageIdx = #{record.packageidx,jdbcType=INTEGER},
      bookIdx = #{record.bookidx,jdbcType=INTEGER},
      bookType = #{record.booktype,jdbcType=INTEGER},
      unit1 = #{record.unit1,jdbcType=INTEGER},
      unit2 = #{record.unit2,jdbcType=INTEGER},
      unit3 = #{record.unit3,jdbcType=INTEGER},
      unit4 = #{record.unit4,jdbcType=INTEGER},
      unit5 = #{record.unit5,jdbcType=INTEGER},
      unit6 = #{record.unit6,jdbcType=INTEGER},
      unit7 = #{record.unit7,jdbcType=INTEGER},
      unit8 = #{record.unit8,jdbcType=INTEGER},
      unit9 = #{record.unit9,jdbcType=INTEGER},
      unit10 = #{record.unit10,jdbcType=INTEGER},
      unit11 = #{record.unit11,jdbcType=INTEGER},
      unit12 = #{record.unit12,jdbcType=INTEGER},
      unit13 = #{record.unit13,jdbcType=INTEGER},
      unit14 = #{record.unit14,jdbcType=INTEGER},
      unit15 = #{record.unit15,jdbcType=INTEGER},
      unit16 = #{record.unit16,jdbcType=INTEGER},
      unit17 = #{record.unit17,jdbcType=INTEGER},
      unit18 = #{record.unit18,jdbcType=INTEGER},
      unit19 = #{record.unit19,jdbcType=INTEGER},
      unit20 = #{record.unit20,jdbcType=INTEGER},
      period = #{record.period,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.spring.springboot.domain.game.playerunit.Playerunit">
    update playerUnit
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="packageidx != null">
        packageIdx = #{packageidx,jdbcType=INTEGER},
      </if>
      <if test="bookidx != null">
        bookIdx = #{bookidx,jdbcType=INTEGER},
      </if>
      <if test="booktype != null">
        bookType = #{booktype,jdbcType=INTEGER},
      </if>
      <if test="unit1 != null">
        unit1 = #{unit1,jdbcType=INTEGER},
      </if>
      <if test="unit2 != null">
        unit2 = #{unit2,jdbcType=INTEGER},
      </if>
      <if test="unit3 != null">
        unit3 = #{unit3,jdbcType=INTEGER},
      </if>
      <if test="unit4 != null">
        unit4 = #{unit4,jdbcType=INTEGER},
      </if>
      <if test="unit5 != null">
        unit5 = #{unit5,jdbcType=INTEGER},
      </if>
      <if test="unit6 != null">
        unit6 = #{unit6,jdbcType=INTEGER},
      </if>
      <if test="unit7 != null">
        unit7 = #{unit7,jdbcType=INTEGER},
      </if>
      <if test="unit8 != null">
        unit8 = #{unit8,jdbcType=INTEGER},
      </if>
      <if test="unit9 != null">
        unit9 = #{unit9,jdbcType=INTEGER},
      </if>
      <if test="unit10 != null">
        unit10 = #{unit10,jdbcType=INTEGER},
      </if>
      <if test="unit11 != null">
        unit11 = #{unit11,jdbcType=INTEGER},
      </if>
      <if test="unit12 != null">
        unit12 = #{unit12,jdbcType=INTEGER},
      </if>
      <if test="unit13 != null">
        unit13 = #{unit13,jdbcType=INTEGER},
      </if>
      <if test="unit14 != null">
        unit14 = #{unit14,jdbcType=INTEGER},
      </if>
      <if test="unit15 != null">
        unit15 = #{unit15,jdbcType=INTEGER},
      </if>
      <if test="unit16 != null">
        unit16 = #{unit16,jdbcType=INTEGER},
      </if>
      <if test="unit17 != null">
        unit17 = #{unit17,jdbcType=INTEGER},
      </if>
      <if test="unit18 != null">
        unit18 = #{unit18,jdbcType=INTEGER},
      </if>
      <if test="unit19 != null">
        unit19 = #{unit19,jdbcType=INTEGER},
      </if>
      <if test="unit20 != null">
        unit20 = #{unit20,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.spring.springboot.domain.game.playerunit.Playerunit">
    update playerUnit
    set pid = #{pid,jdbcType=BIGINT},
      createTime = #{createtime,jdbcType=INTEGER},
      channel = #{channel,jdbcType=INTEGER},
      packageIdx = #{packageidx,jdbcType=INTEGER},
      bookIdx = #{bookidx,jdbcType=INTEGER},
      bookType = #{booktype,jdbcType=INTEGER},
      unit1 = #{unit1,jdbcType=INTEGER},
      unit2 = #{unit2,jdbcType=INTEGER},
      unit3 = #{unit3,jdbcType=INTEGER},
      unit4 = #{unit4,jdbcType=INTEGER},
      unit5 = #{unit5,jdbcType=INTEGER},
      unit6 = #{unit6,jdbcType=INTEGER},
      unit7 = #{unit7,jdbcType=INTEGER},
      unit8 = #{unit8,jdbcType=INTEGER},
      unit9 = #{unit9,jdbcType=INTEGER},
      unit10 = #{unit10,jdbcType=INTEGER},
      unit11 = #{unit11,jdbcType=INTEGER},
      unit12 = #{unit12,jdbcType=INTEGER},
      unit13 = #{unit13,jdbcType=INTEGER},
      unit14 = #{unit14,jdbcType=INTEGER},
      unit15 = #{unit15,jdbcType=INTEGER},
      unit16 = #{unit16,jdbcType=INTEGER},
      unit17 = #{unit17,jdbcType=INTEGER},
      unit18 = #{unit18,jdbcType=INTEGER},
      unit19 = #{unit19,jdbcType=INTEGER},
      unit20 = #{unit20,jdbcType=INTEGER},
      period = #{period,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findNumBetweenDate" resultType="java.lang.Integer">
    select count(*)
    from playerUnit
    where createTime between #{startTime} and #{endTime}
    and bookIdx > 474 and unit3 = 1
    order by bookIdx
    </select>

  <select id="findBetweenDate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from playerUnit
    where createTime between #{startTime} and #{endTime}
    and bookIdx > 474 and unit3 = 1
    order by bookIdx, createTime
  </select>

  <select id="findPurchaseNumBetweenDate" resultType="java.lang.Integer">
    select count(*)
    from playerUnit
    where createTime between #{startTime} and #{endTime}
    and bookIdx BETWEEN 48 AND 59 AND unit3 = 1
    order by createTime
    </select>

  <select id="findPurchaseBetweenDate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from playerUnit
    where createTime between #{startTime} and #{endTime}
    and bookIdx BETWEEN 48 AND 59 AND unit3 = 1
    order by bookIdx, createTime
  </select>

  <select id="findVersionNumBetweenDate" resultType="java.lang.Integer">
    select count(*)
    from playerUnit
    where createTime between #{startTime} and #{endTime}
    and bookIdx BETWEEN 52 and 59 AND unit3 = 1
    order by createTime
    </select>

  <select id="findVersionBetweenDate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from playerUnit
    where createTime between #{startTime} and #{endTime}
    and bookIdx BETWEEN 52 and 59 and unit3 = 1
    order by bookIdx, createTime
  </select>

  <select id="findPlayerUnitByExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from playerUnit
    <trim prefix="where" suffixOverrides="and">
        <if test="pid!=null">
          pid = #{pid} and
        </if>
        <if test="bookidx!=null">
          bookIdx = #{bookidx} and
        </if>
    </trim>
    order by bookIdx
  </select>

  <select id="queryRechargeByPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from playerUnit
    <trim prefix="where" suffixOverrides="and">
      <if test="startTime != null">
        createTime &gt;= #{startTime} and
      </if>
      <if test="endTime != null">
        createTime &lt;= #{endTime} and
      </if>
      <if test="pidList != null and pidList.size > 0">
        pid in
        <foreach collection="pidList" item="item" index="index" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </trim>
    order by bookIdx
    limit #{startRow}, #{pageSize}

  </select>

  <select id="queryRechargeByPageCount" resultType="java.lang.Integer">
    select count(1)
    from playerUnit
    <trim prefix="where" suffixOverrides="and">
      <if test="startTime != null">
        createTime &gt;= #{startTime} and
      </if>
      <if test="endTime != null">
        createTime &lt;= #{endTime} and
      </if>
      <if test="pidList != null and pidList.size > 0">
        pid in
        <foreach collection="pidList" item="item" index="index" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </trim>
  </select>

</mapper>