<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.springboot.dao.game.PlayerDao">
    <resultMap id="BaseResultMap" type="org.spring.springboot.domain.game.Player">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="accountID" jdbcType="BIGINT" property="accountid"/>
        <result column="sid" jdbcType="INTEGER" property="sid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="icon" jdbcType="INTEGER" property="icon"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="headImageUrl" jdbcType="VARCHAR" property="headimageurl"/>
        <result column="createTime" jdbcType="BIGINT" property="createtime"/>
        <result column="lv" jdbcType="INTEGER" property="lv"/>
        <result column="gmLevel" jdbcType="INTEGER" property="gmlevel"/>
        <result column="vipLevel" jdbcType="INTEGER" property="viplevel"/>
        <result column="vipExp" jdbcType="INTEGER" property="vipexp"/>
        <result column="totalRecharge" jdbcType="INTEGER" property="totalrecharge"/>
        <result column="crystal" jdbcType="INTEGER" property="crystal"/>
        <result column="gold" jdbcType="INTEGER" property="gold"/>
        <result column="roomCard" jdbcType="INTEGER" property="roomcard"/>
        <result column="fastCard" jdbcType="INTEGER" property="fastcard"/>
        <result column="cheatTimes" jdbcType="INTEGER" property="cheattimes"/>
        <result column="banned_ChatExpiredTime" jdbcType="INTEGER" property="bannedChatexpiredtime"/>
        <result column="banned_LoginExpiredTime" jdbcType="INTEGER" property="bannedLoginexpiredtime"/>
        <result column="bannedTimes" jdbcType="INTEGER" property="bannedtimes"/>
        <result column="lastLogin" jdbcType="INTEGER" property="lastlogin"/>
        <result column="lastLogout" jdbcType="INTEGER" property="lastlogout"/>
        <result column="currentGameType" jdbcType="INTEGER" property="currentgametype"/>
        <result column="referer" jdbcType="INTEGER" property="referer"/>
        <result column="familyID" jdbcType="BIGINT" property="familyid"/>
        <result column="onelevel_agents_id" jdbcType="INTEGER" property="onelevelAgentsId"/>
        <result column="top_agents_id" jdbcType="INTEGER" property="topAgentsId"/>
        <result column="realName" jdbcType="VARCHAR" property="realname"/>
        <result column="realNumber" jdbcType="VARCHAR" property="realnumber"/>
        <result column="zleRoomCard" jdbcType="INTEGER" property="zleroomcard"/>
        <result column="real_referer" jdbcType="INTEGER" property="realReferer"/>
        <result column="wx_unionid" jdbcType="VARCHAR" property="wxUnionid"/>
        <result column="fake" jdbcType="INTEGER" property="fake"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, accountID, sid, `name`, icon, sex, headImageUrl, createTime, lv, gmLevel, vipLevel, 
    vipExp, totalRecharge, crystal, gold, roomCard, fastCard, cheatTimes, banned_ChatExpiredTime, 
    banned_LoginExpiredTime, bannedTimes, lastLogin, lastLogout, currentGameType, referer, 
    familyID, onelevel_agents_id, top_agents_id, realName, realNumber, zleRoomCard, real_referer, 
    wx_unionid, fake
  </sql>
    <select id="selectByExample" parameterType="generator.PlayerExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from player
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from player
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from player
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="generator.PlayerExample">
        delete from player
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.spring.springboot.domain.game.Player"
            useGeneratedKeys="true">
    insert into player (accountID, sid, `name`, 
      icon, sex, headImageUrl, 
      createTime, lv, gmLevel, 
      vipLevel, vipExp, totalRecharge, 
      crystal, gold, roomCard, 
      fastCard, cheatTimes, banned_ChatExpiredTime, 
      banned_LoginExpiredTime, bannedTimes, lastLogin, 
      lastLogout, currentGameType, referer, 
      familyID, onelevel_agents_id, top_agents_id, 
      realName, realNumber, zleRoomCard, 
      real_referer, wx_unionid, fake
      )
    values (#{accountid,jdbcType=BIGINT}, #{sid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{icon,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{headimageurl,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=BIGINT}, #{lv,jdbcType=INTEGER}, #{gmlevel,jdbcType=INTEGER}, 
      #{viplevel,jdbcType=INTEGER}, #{vipexp,jdbcType=INTEGER}, #{totalrecharge,jdbcType=INTEGER}, 
      #{crystal,jdbcType=INTEGER}, #{gold,jdbcType=INTEGER}, #{roomcard,jdbcType=INTEGER}, 
      #{fastcard,jdbcType=INTEGER}, #{cheattimes,jdbcType=INTEGER}, #{bannedChatexpiredtime,jdbcType=INTEGER}, 
      #{bannedLoginexpiredtime,jdbcType=INTEGER}, #{bannedtimes,jdbcType=INTEGER}, #{lastlogin,jdbcType=INTEGER}, 
      #{lastlogout,jdbcType=INTEGER}, #{currentgametype,jdbcType=INTEGER}, #{referer,jdbcType=INTEGER}, 
      #{familyid,jdbcType=BIGINT}, #{onelevelAgentsId,jdbcType=INTEGER}, #{topAgentsId,jdbcType=INTEGER}, 
      #{realname,jdbcType=VARCHAR}, #{realnumber,jdbcType=VARCHAR}, #{zleroomcard,jdbcType=INTEGER}, 
      #{realReferer,jdbcType=INTEGER}, #{wxUnionid,jdbcType=VARCHAR}, #{fake,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.spring.springboot.domain.game.Player"
            useGeneratedKeys="true">
        insert into player
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountid != null">
                accountID,
            </if>
            <if test="sid != null">
                sid,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="headimageurl != null">
                headImageUrl,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="lv != null">
                lv,
            </if>
            <if test="gmlevel != null">
                gmLevel,
            </if>
            <if test="viplevel != null">
                vipLevel,
            </if>
            <if test="vipexp != null">
                vipExp,
            </if>
            <if test="totalrecharge != null">
                totalRecharge,
            </if>
            <if test="crystal != null">
                crystal,
            </if>
            <if test="gold != null">
                gold,
            </if>
            <if test="roomcard != null">
                roomCard,
            </if>
            <if test="fastcard != null">
                fastCard,
            </if>
            <if test="cheattimes != null">
                cheatTimes,
            </if>
            <if test="bannedChatexpiredtime != null">
                banned_ChatExpiredTime,
            </if>
            <if test="bannedLoginexpiredtime != null">
                banned_LoginExpiredTime,
            </if>
            <if test="bannedtimes != null">
                bannedTimes,
            </if>
            <if test="lastlogin != null">
                lastLogin,
            </if>
            <if test="lastlogout != null">
                lastLogout,
            </if>
            <if test="currentgametype != null">
                currentGameType,
            </if>
            <if test="referer != null">
                referer,
            </if>
            <if test="familyid != null">
                familyID,
            </if>
            <if test="onelevelAgentsId != null">
                onelevel_agents_id,
            </if>
            <if test="topAgentsId != null">
                top_agents_id,
            </if>
            <if test="realname != null">
                realName,
            </if>
            <if test="realnumber != null">
                realNumber,
            </if>
            <if test="zleroomcard != null">
                zleRoomCard,
            </if>
            <if test="realReferer != null">
                real_referer,
            </if>
            <if test="wxUnionid != null">
                wx_unionid,
            </if>
            <if test="fake != null">
                fake,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountid != null">
                #{accountid,jdbcType=BIGINT},
            </if>
            <if test="sid != null">
                #{sid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="headimageurl != null">
                #{headimageurl,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=BIGINT},
            </if>
            <if test="lv != null">
                #{lv,jdbcType=INTEGER},
            </if>
            <if test="gmlevel != null">
                #{gmlevel,jdbcType=INTEGER},
            </if>
            <if test="viplevel != null">
                #{viplevel,jdbcType=INTEGER},
            </if>
            <if test="vipexp != null">
                #{vipexp,jdbcType=INTEGER},
            </if>
            <if test="totalrecharge != null">
                #{totalrecharge,jdbcType=INTEGER},
            </if>
            <if test="crystal != null">
                #{crystal,jdbcType=INTEGER},
            </if>
            <if test="gold != null">
                #{gold,jdbcType=INTEGER},
            </if>
            <if test="roomcard != null">
                #{roomcard,jdbcType=INTEGER},
            </if>
            <if test="fastcard != null">
                #{fastcard,jdbcType=INTEGER},
            </if>
            <if test="cheattimes != null">
                #{cheattimes,jdbcType=INTEGER},
            </if>
            <if test="bannedChatexpiredtime != null">
                #{bannedChatexpiredtime,jdbcType=INTEGER},
            </if>
            <if test="bannedLoginexpiredtime != null">
                #{bannedLoginexpiredtime,jdbcType=INTEGER},
            </if>
            <if test="bannedtimes != null">
                #{bannedtimes,jdbcType=INTEGER},
            </if>
            <if test="lastlogin != null">
                #{lastlogin,jdbcType=INTEGER},
            </if>
            <if test="lastlogout != null">
                #{lastlogout,jdbcType=INTEGER},
            </if>
            <if test="currentgametype != null">
                #{currentgametype,jdbcType=INTEGER},
            </if>
            <if test="referer != null">
                #{referer,jdbcType=INTEGER},
            </if>
            <if test="familyid != null">
                #{familyid,jdbcType=BIGINT},
            </if>
            <if test="onelevelAgentsId != null">
                #{onelevelAgentsId,jdbcType=INTEGER},
            </if>
            <if test="topAgentsId != null">
                #{topAgentsId,jdbcType=INTEGER},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="realnumber != null">
                #{realnumber,jdbcType=VARCHAR},
            </if>
            <if test="zleroomcard != null">
                #{zleroomcard,jdbcType=INTEGER},
            </if>
            <if test="realReferer != null">
                #{realReferer,jdbcType=INTEGER},
            </if>
            <if test="wxUnionid != null">
                #{wxUnionid,jdbcType=VARCHAR},
            </if>
            <if test="fake != null">
                #{fake,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="generator.PlayerExample" resultType="java.lang.Long">
        select count(*) from player
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update player
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.accountid != null">
                accountID = #{record.accountid,jdbcType=BIGINT},
            </if>
            <if test="record.sid != null">
                sid = #{record.sid,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.icon != null">
                icon = #{record.icon,jdbcType=INTEGER},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.headimageurl != null">
                headImageUrl = #{record.headimageurl,jdbcType=VARCHAR},
            </if>
            <if test="record.createtime != null">
                createTime = #{record.createtime,jdbcType=BIGINT},
            </if>
            <if test="record.lv != null">
                lv = #{record.lv,jdbcType=INTEGER},
            </if>
            <if test="record.gmlevel != null">
                gmLevel = #{record.gmlevel,jdbcType=INTEGER},
            </if>
            <if test="record.viplevel != null">
                vipLevel = #{record.viplevel,jdbcType=INTEGER},
            </if>
            <if test="record.vipexp != null">
                vipExp = #{record.vipexp,jdbcType=INTEGER},
            </if>
            <if test="record.totalrecharge != null">
                totalRecharge = #{record.totalrecharge,jdbcType=INTEGER},
            </if>
            <if test="record.crystal != null">
                crystal = #{record.crystal,jdbcType=INTEGER},
            </if>
            <if test="record.gold != null">
                gold = #{record.gold,jdbcType=INTEGER},
            </if>
            <if test="record.roomcard != null">
                roomCard = #{record.roomcard,jdbcType=INTEGER},
            </if>
            <if test="record.fastcard != null">
                fastCard = #{record.fastcard,jdbcType=INTEGER},
            </if>
            <if test="record.cheattimes != null">
                cheatTimes = #{record.cheattimes,jdbcType=INTEGER},
            </if>
            <if test="record.bannedChatexpiredtime != null">
                banned_ChatExpiredTime = #{record.bannedChatexpiredtime,jdbcType=INTEGER},
            </if>
            <if test="record.bannedLoginexpiredtime != null">
                banned_LoginExpiredTime = #{record.bannedLoginexpiredtime,jdbcType=INTEGER},
            </if>
            <if test="record.bannedtimes != null">
                bannedTimes = #{record.bannedtimes,jdbcType=INTEGER},
            </if>
            <if test="record.lastlogin != null">
                lastLogin = #{record.lastlogin,jdbcType=INTEGER},
            </if>
            <if test="record.lastlogout != null">
                lastLogout = #{record.lastlogout,jdbcType=INTEGER},
            </if>
            <if test="record.currentgametype != null">
                currentGameType = #{record.currentgametype,jdbcType=INTEGER},
            </if>
            <if test="record.referer != null">
                referer = #{record.referer,jdbcType=INTEGER},
            </if>
            <if test="record.familyid != null">
                familyID = #{record.familyid,jdbcType=BIGINT},
            </if>
            <if test="record.onelevelAgentsId != null">
                onelevel_agents_id = #{record.onelevelAgentsId,jdbcType=INTEGER},
            </if>
            <if test="record.topAgentsId != null">
                top_agents_id = #{record.topAgentsId,jdbcType=INTEGER},
            </if>
            <if test="record.realname != null">
                realName = #{record.realname,jdbcType=VARCHAR},
            </if>
            <if test="record.realnumber != null">
                realNumber = #{record.realnumber,jdbcType=VARCHAR},
            </if>
            <if test="record.zleroomcard != null">
                zleRoomCard = #{record.zleroomcard,jdbcType=INTEGER},
            </if>
            <if test="record.realReferer != null">
                real_referer = #{record.realReferer,jdbcType=INTEGER},
            </if>
            <if test="record.wxUnionid != null">
                wx_unionid = #{record.wxUnionid,jdbcType=VARCHAR},
            </if>
            <if test="record.fake != null">
                fake = #{record.fake,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update player
        set id = #{record.id,jdbcType=BIGINT},
        accountID = #{record.accountid,jdbcType=BIGINT},
        sid = #{record.sid,jdbcType=INTEGER},
        `name` = #{record.name,jdbcType=VARCHAR},
        icon = #{record.icon,jdbcType=INTEGER},
        sex = #{record.sex,jdbcType=INTEGER},
        headImageUrl = #{record.headimageurl,jdbcType=VARCHAR},
        createTime = #{record.createtime,jdbcType=BIGINT},
        lv = #{record.lv,jdbcType=INTEGER},
        gmLevel = #{record.gmlevel,jdbcType=INTEGER},
        vipLevel = #{record.viplevel,jdbcType=INTEGER},
        vipExp = #{record.vipexp,jdbcType=INTEGER},
        totalRecharge = #{record.totalrecharge,jdbcType=INTEGER},
        crystal = #{record.crystal,jdbcType=INTEGER},
        gold = #{record.gold,jdbcType=INTEGER},
        roomCard = #{record.roomcard,jdbcType=INTEGER},
        fastCard = #{record.fastcard,jdbcType=INTEGER},
        cheatTimes = #{record.cheattimes,jdbcType=INTEGER},
        banned_ChatExpiredTime = #{record.bannedChatexpiredtime,jdbcType=INTEGER},
        banned_LoginExpiredTime = #{record.bannedLoginexpiredtime,jdbcType=INTEGER},
        bannedTimes = #{record.bannedtimes,jdbcType=INTEGER},
        lastLogin = #{record.lastlogin,jdbcType=INTEGER},
        lastLogout = #{record.lastlogout,jdbcType=INTEGER},
        currentGameType = #{record.currentgametype,jdbcType=INTEGER},
        referer = #{record.referer,jdbcType=INTEGER},
        familyID = #{record.familyid,jdbcType=BIGINT},
        onelevel_agents_id = #{record.onelevelAgentsId,jdbcType=INTEGER},
        top_agents_id = #{record.topAgentsId,jdbcType=INTEGER},
        realName = #{record.realname,jdbcType=VARCHAR},
        realNumber = #{record.realnumber,jdbcType=VARCHAR},
        zleRoomCard = #{record.zleroomcard,jdbcType=INTEGER},
        real_referer = #{record.realReferer,jdbcType=INTEGER},
        wx_unionid = #{record.wxUnionid,jdbcType=VARCHAR},
        fake = #{record.fake,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.spring.springboot.domain.game.Player">
        update player
        <set>
            <if test="accountid != null">
                accountID = #{accountid,jdbcType=BIGINT},
            </if>
            <if test="sid != null">
                sid = #{sid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="headimageurl != null">
                headImageUrl = #{headimageurl,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=BIGINT},
            </if>
            <if test="lv != null">
                lv = #{lv,jdbcType=INTEGER},
            </if>
            <if test="gmlevel != null">
                gmLevel = #{gmlevel,jdbcType=INTEGER},
            </if>
            <if test="viplevel != null">
                vipLevel = #{viplevel,jdbcType=INTEGER},
            </if>
            <if test="vipexp != null">
                vipExp = #{vipexp,jdbcType=INTEGER},
            </if>
            <if test="totalrecharge != null">
                totalRecharge = #{totalrecharge,jdbcType=INTEGER},
            </if>
            <if test="crystal != null">
                crystal = #{crystal,jdbcType=INTEGER},
            </if>
            <if test="gold != null">
                gold = #{gold,jdbcType=INTEGER},
            </if>
            <if test="roomcard != null">
                roomCard = #{roomcard,jdbcType=INTEGER},
            </if>
            <if test="fastcard != null">
                fastCard = #{fastcard,jdbcType=INTEGER},
            </if>
            <if test="cheattimes != null">
                cheatTimes = #{cheattimes,jdbcType=INTEGER},
            </if>
            <if test="bannedChatexpiredtime != null">
                banned_ChatExpiredTime = #{bannedChatexpiredtime,jdbcType=INTEGER},
            </if>
            <if test="bannedLoginexpiredtime != null">
                banned_LoginExpiredTime = #{bannedLoginexpiredtime,jdbcType=INTEGER},
            </if>
            <if test="bannedtimes != null">
                bannedTimes = #{bannedtimes,jdbcType=INTEGER},
            </if>
            <if test="lastlogin != null">
                lastLogin = #{lastlogin,jdbcType=INTEGER},
            </if>
            <if test="lastlogout != null">
                lastLogout = #{lastlogout,jdbcType=INTEGER},
            </if>
            <if test="currentgametype != null">
                currentGameType = #{currentgametype,jdbcType=INTEGER},
            </if>
            <if test="referer != null">
                referer = #{referer,jdbcType=INTEGER},
            </if>
            <if test="familyid != null">
                familyID = #{familyid,jdbcType=BIGINT},
            </if>
            <if test="onelevelAgentsId != null">
                onelevel_agents_id = #{onelevelAgentsId,jdbcType=INTEGER},
            </if>
            <if test="topAgentsId != null">
                top_agents_id = #{topAgentsId,jdbcType=INTEGER},
            </if>
            <if test="realname != null">
                realName = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="realnumber != null">
                realNumber = #{realnumber,jdbcType=VARCHAR},
            </if>
            <if test="zleroomcard != null">
                zleRoomCard = #{zleroomcard,jdbcType=INTEGER},
            </if>
            <if test="realReferer != null">
                real_referer = #{realReferer,jdbcType=INTEGER},
            </if>
            <if test="wxUnionid != null">
                wx_unionid = #{wxUnionid,jdbcType=VARCHAR},
            </if>
            <if test="fake != null">
                fake = #{fake,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.spring.springboot.domain.game.Player">
    update player
    set accountID = #{accountid,jdbcType=BIGINT},
      sid = #{sid,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      headImageUrl = #{headimageurl,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=BIGINT},
      lv = #{lv,jdbcType=INTEGER},
      gmLevel = #{gmlevel,jdbcType=INTEGER},
      vipLevel = #{viplevel,jdbcType=INTEGER},
      vipExp = #{vipexp,jdbcType=INTEGER},
      totalRecharge = #{totalrecharge,jdbcType=INTEGER},
      crystal = #{crystal,jdbcType=INTEGER},
      gold = #{gold,jdbcType=INTEGER},
      roomCard = #{roomcard,jdbcType=INTEGER},
      fastCard = #{fastcard,jdbcType=INTEGER},
      cheatTimes = #{cheattimes,jdbcType=INTEGER},
      banned_ChatExpiredTime = #{bannedChatexpiredtime,jdbcType=INTEGER},
      banned_LoginExpiredTime = #{bannedLoginexpiredtime,jdbcType=INTEGER},
      bannedTimes = #{bannedtimes,jdbcType=INTEGER},
      lastLogin = #{lastlogin,jdbcType=INTEGER},
      lastLogout = #{lastlogout,jdbcType=INTEGER},
      currentGameType = #{currentgametype,jdbcType=INTEGER},
      referer = #{referer,jdbcType=INTEGER},
      familyID = #{familyid,jdbcType=BIGINT},
      onelevel_agents_id = #{onelevelAgentsId,jdbcType=INTEGER},
      top_agents_id = #{topAgentsId,jdbcType=INTEGER},
      realName = #{realname,jdbcType=VARCHAR},
      realNumber = #{realnumber,jdbcType=VARCHAR},
      zleRoomCard = #{zleroomcard,jdbcType=INTEGER},
      real_referer = #{realReferer,jdbcType=INTEGER},
      wx_unionid = #{wxUnionid,jdbcType=VARCHAR},
      fake = #{fake,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="findRegisterNumBetweenDate" resultType="java.lang.Integer">
    select count(*)
    from player
    where createTime between #{startTime} and #{endTime}
    </select>

    <select id="findRegistersBetweenDate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from player
        where createTime between #{startTime} and #{endTime}
        order by createTime
    </select>

    <!--<resultMap id="dayCountMap" type="java.util.Map">-->
        <!--<result column="timedate" property="timedate" jdbcType="CHAR"/>-->
        <!--<result column="num" property="num" jdbcType="INTEGER"/>-->
    <!--</resultMap>-->
    <!--<select id="findRegisterNumGroupbyDate" resultMap="dayCountMap">-->
    <!--select count(*) as num,timedate from-->
    <!--(select *,from_unixtime(createTime/1000,'%Y-%m-%d') as timedate-->
    <!--from player as p-->
    <!--where createTime between #{startTime} and #{endTime}-->
    <!--order by createTime-->
    <!--) tmp group by timedate-->
  <!--</select>-->
    <select id="findRegisterNumGroupbyDate" resultType="org.spring.springboot.domain.game.DayPlayer">
    select count(*) as num,timedate from
    (select *,from_unixtime(createTime/1000,'%Y-%m-%d') as timedate
    from player as p
    where createTime between #{startTime} and #{endTime}
    order by createTime
    ) tmp group by timedate
    </select>


    <select id="findActiveNumBetweenDate" resultType="java.lang.Integer">
    select count(*)
    from player
    where lastLogin between #{startTime} and #{endTime}
    </select>

    <select id="findActiveBetweenDate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from player
        where lastLogin between #{startTime} and #{endTime}
        order by lastLogin
    </select>

    <select id="findActiveNumGroupbyDate" resultType="org.spring.springboot.domain.game.DayPlayer">
    select count(*) as num,timedate from
    (select *,from_unixtime(lastLogin,'%Y-%m-%d') as timedate
    from player as p
    where lastLogin between #{startTime} and #{endTime}
    order by lastLogin
    ) tmp group by timedate
  </select>

    <select id="batchQueryPlayerInfosById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from player
        <trim prefix="where">
            id in
            <foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </trim>
    </select>

    <!--<select id="findPlyersBetweenTime" resultMap="BaseResultMap">-->
        <!--select-->
        <!--<include refid="Base_Column_List"/>-->
        <!--from player-->
        <!--where createTime between #{startTime} and #{endTime}-->
    <!--</select>-->


    <!--<select id="findPlyersBetweenTimeNum" resultType="java.lang.Integer">-->
    <!--select count(*)-->
    <!--from player-->
    <!--where createTime between #{startTime} and #{endTime}-->
  <!--</select>-->

    <!--<resultMap id="dayCountMap" type="java.util.Map">-->
        <!--<result column="timedate" property="timedate" jdbcType="CHAR"/>-->
        <!--<result column="num" property="num" jdbcType="INTEGER"/>-->
    <!--</resultMap>-->
    <!--<select id="findPlyersHistoryNumLast30Days" resultMap="dayCountMap">-->
    <!--select count(*) as num,timedate from-->
    <!--(select *,from_unixtime(createTime/1000,'%Y-%m-%d') as timedate-->
    <!--from player as p-->
    <!--where createTime between #{startTime} and #{endTime}-->
    <!--) tmp group by timedate-->
  <!--</select>-->
</mapper>