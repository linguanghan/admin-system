<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--<mapper namespace="org.spring.springboot.dao.res">-->
<mapper namespace="org.spring.springboot.dao.pelbsData.PlayerManagementDao">
    <resultMap id="BaseResultMap" type="org.spring.springboot.domain.pelbsData.PlayerManagement">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="agentPid" jdbcType="BIGINT" property="agentPid"/>
        <result column="agentName" jdbcType="VARCHAR" property="agentName"/>
        <result column="createTime" jdbcType="INTEGER" property="createTime"/>
        <result column="userNum" jdbcType="INTEGER" property="userNum"/>
        <result column="totalProfit" jdbcType="DECIMAL" property="totalProfit"/>
        <result column="curProfit" jdbcType="DECIMAL" property="curProfit"/>
        <result column="profitRatio" jdbcType="INTEGER" property="profitRatio"/>
        <result column="identity" jdbcType="INTEGER" property="identity"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,state,agentPid,agentName,createTime,userNum,totalProfit,curProfit,profitRatio
    </sql>

<!--    <select id="fetchPlayerManagementInfos" resultMap="BaseResultMap">-->
<!--        select-->
<!--        <include refid="Base_Column_List"/>-->
<!--        from playerAgentInfo-->
<!--        order by `agentPid`-->
<!--    </select>-->

    <select id="fetchPlayerManagementInfos" resultMap="BaseResultMap">
        select
        b.id as id, b.state, b.agentPid, b.agentName, b.createTime, b.userNum, b.totalProfit, b.curProfit, b.profitRatio,
        p.identity as identity
        from playerAgentInfo b
        left join player p on b.agentPid = p.id
        order by `agentPid`
    </select>



    <!--    <select id="fetchPlayerManagementInfosByName" resultMap="BaseResultMap">-->
<!--        select-->
<!--        <include refid="Base_Column_List"/>-->
<!--        from playerAgentInfo b-->
<!--        where b.agentName like concat('%',#{agentName,jdbcType=VARCHAR},'%')-->
<!--    </select>-->

<!--    <select id="fetchPlayerManagementInfosByAgentPid" resultMap="BaseResultMap">-->
<!--        select-->
<!--        <include refid="Base_Column_List"/>-->
<!--        from playerAgentInfo b-->
<!--        where b.agentPid = #{agentPid}-->
<!--    </select>-->

    <select id="fetchPlayerManagementInfosByName" resultMap="BaseResultMap">
        select
        b.id, b.state, b.agentPid, b.agentName, b.createTime, b.userNum, b.totalProfit, b.curProfit, b.profitRatio,
        p.identity as identity
        from playerAgentInfo b
        left join player p on b.agentPid = p.id
        where b.agentName like concat('%',#{agentName,jdbcType=VARCHAR},'%')
    </select>


    <select id="fetchPlayerManagementInfosByPlayerId" resultMap="BaseResultMap">
        select
        b.id, b.state, b.agentPid, b.agentName, b.createTime, b.userNum, b.totalProfit, b.curProfit, b.profitRatio,
        p.identity as identity
        from playerAgentInfo b
        left join player p on b.agentPid = p.id
        where b.agentPid = #{agentPid}
    </select>

    <!--    <select id="searchPlayerManagementInfos" resultMap="BaseResultMap">-->
<!--        select-->
<!--        <include refid="Base_Column_List"/>-->
<!--        from playerAgentInfo b-->
<!--        where b.agentPid like concat('%',#{keyword,jdbcType=VARCHAR},'%')-->
<!--        or b.agentName like concat('%',#{keyword,jdbcType=VARCHAR},'%')-->
<!--    </select>-->

    <select id="searchPlayerManagementInfos" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        , p.identity as identity
        from playerAgentInfo b
        left join player p on b.agentPid = p.id
        where b.agentPid like concat('%',#{keyword,jdbcType=VARCHAR},'%')
        or b.agentName like concat('%',#{keyword,jdbcType=VARCHAR},'%')
    </select>


    <update id="updatePlayerManagementInfo" parameterType="org.spring.springboot.domain.pelbsData.PlayerManagement">
        update playerAgentInfo
        <set>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="agentPid != null">
                agentPid = #{agentPid,jdbcType=BIGINT},
            </if>
            <if test="agentName != null">
                agentName = #{agentName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=INTEGER},
            </if>
            <if test="userNum != null">
                userNum = #{userNum,jdbcType=INTEGER},
            </if>
            <if test="totalProfit != null">
                totalProfit = #{totalProfit,jdbcType=DECIMAL},
            </if>
            <if test="curProfit != null">
                curProfit = #{curProfit,jdbcType=DECIMAL},
            </if>
            <if test="profitRatio != null">
                profitRatio = #{profitRatio,jdbcType=INTEGER},
            </if>
        </set>
        where agentPid = #{agentPid};
    </update>

    <update id="updatePlayerIdentityInfo" parameterType="org.spring.springboot.domain.pelbsData.PlayerManagement">
        update player
        <set>
            <if test="identity != null">
                identity = #{identity,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{agentPid};
    </update>

    <delete id="deletePlayerManagementInfo" parameterType="java.lang.Long">
        delete from playerAgentInfo
        where agentPid = #{agentPid}
    </delete>

    <delete id="deletePlayerIdentityInfo" parameterType="java.lang.Long">
        delete from player
        where id = #{agentPid};
    </delete>

    <insert id="savePlayerIdentityInfo" parameterType="org.spring.springboot.domain.pelbsData.PlayerManagement" useGeneratedKeys="false" keyProperty="id">
        insert into player (id, identity)
        values (#{agentPid, jdbcType=BIGINT}, #{identity, jdbcType=INTEGER});
    </insert>

    <insert id="savePlayerManagementInfo" parameterType="org.spring.springboot.domain.pelbsData.PlayerManagement" useGeneratedKeys="true" keyProperty="id">
        insert into playerAgentInfo
        (state, agentPid, agentName, userNum, totalProfit, curProfit, profitRatio, createTime)
        values
        (#{state,jdbcType=INTEGER}, #{agentPid,jdbcType=BIGINT}, #{agentName,jdbcType=VARCHAR},
        #{userNum,jdbcType=INTEGER}, #{totalProfit,jdbcType=DECIMAL}, #{curProfit,jdbcType=DECIMAL},
        #{profitRatio,jdbcType=INTEGER},
        #{createTime, jdbcType=INTEGER}
        );
    </insert>


    <!--    <select id="batchQueryPlayerManagementInfosByIds"-->
<!--            resultMap="BaseResultMap">-->
<!--        select-->
<!--        <include refid="Base_Column_List"/>-->
<!--        from playerAgentInfo b-->
<!--        where b.agentPid in-->
<!--        <foreach collection="ids" item="id" open="(" close=")" separator=",">-->
<!--            #{id}-->
<!--        </foreach>-->
<!--    </select>-->

    <select id="batchQueryPlayerManagementInfosByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        , p.identity as identity
        from playerAgentInfo b
        left join player p on b.id = p.id
        where b.agentPid in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

</mapper>